<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.springbootshop.mapper.OrdersMapper">


  <resultMap id="BaseResultMap" type="com.springboot.springbootshop.model.Orders">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="addname" jdbcType="VARCHAR" property="addname" />
    <result column="goodsname" jdbcType="VARCHAR" property="goodsname" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="up_time" jdbcType="VARCHAR" property="upTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="send_time1" jdbcType="VARCHAR" property="sendTime1" />
    <result column="send_time2" jdbcType="VARCHAR" property="sendTime2" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
  </resultMap>
  <sql id="Base_Column_List">
    oid, uid, addname, goodsname, `number`, up_time, state, address, phone, model, color,
    price, picture, send_time1, send_time2, shopid
  </sql>



  <select id="getAllOrdersByUid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select * from orders where #{uid}=uid
	</select>


  <select id="getAllOrdersByShopid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select * from orders where #{shopid}=shopid
	</select>

  <!-- 添加订单 使用SQL -->
  <insert id="addOrder">

	insert into orders(uid,addname,goodsname,`number`,up_time,state,address,phone,model,color,price,picture)
	values (#{uid},#{addname},#{goodsname},#{number},#{up_time},#{state},#{address},#{phone},#{model},#{color},#{price},#{picture})
	</insert>

  <update id="updateOrder">
		update orders set state=#{state}  where oid=#{oid}
	</update>

  <!--根据订单生成时间 以及商品的名字-->
  <select id="selectByupTime" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from orders where up_time = #{upTime} and goodsname=#{goodsname}
  </select>



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.springbootshop.model.Orders">
    insert into orders (oid, uid, addname, 
      goodsname, `number`, up_time,
      state, address, phone, 
      model, color, price, 
      picture, send_time1, send_time2, 
      shopid)
    values (#{oid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{addname,jdbcType=VARCHAR}, 
      #{goodsname,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, #{upTime,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{picture,jdbcType=VARCHAR}, #{sendTime1,jdbcType=VARCHAR}, #{sendTime2,jdbcType=VARCHAR}, 
      #{shopid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.springbootshop.model.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="addname != null">
        addname,
      </if>
      <if test="goodsname != null">
        goodsname,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="upTime != null">
        up_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="sendTime1 != null">
        send_time1,
      </if>
      <if test="sendTime2 != null">
        send_time2,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="addname != null">
        #{addname,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="upTime != null">
        #{upTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="sendTime1 != null">
        #{sendTime1,jdbcType=VARCHAR},
      </if>
      <if test="sendTime2 != null">
        #{sendTime2,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.springbootshop.model.Orders">
    update orders
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="addname != null">
        addname = #{addname,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        goodsname = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="upTime != null">
        up_time = #{upTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="sendTime1 != null">
        send_time1 = #{sendTime1,jdbcType=VARCHAR},
      </if>
      <if test="sendTime2 != null">
        send_time2 = #{sendTime2,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.springbootshop.model.Orders">
    update orders
    set uid = #{uid,jdbcType=INTEGER},
      addname = #{addname,jdbcType=VARCHAR},
      goodsname = #{goodsname,jdbcType=VARCHAR},
      `number` = #{number,jdbcType=INTEGER},
      up_time = #{upTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      picture = #{picture,jdbcType=VARCHAR},
      send_time1 = #{sendTime1,jdbcType=VARCHAR},
      send_time2 = #{sendTime2,jdbcType=VARCHAR},
      shopid = #{shopid,jdbcType=INTEGER}
    where oid = #{oid,jdbcType=INTEGER}
  </update>


  <select id="selectByStateAndUsername" resultMap="BaseResultMap" >
    select *  from orders
     where 1=1 and state = #{state,jdbcType=INTEGER}  and addname like   CONCAT('%',#{addname},'%')


  </select>


  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from orders
    where  addname like   CONCAT('%',#{addname},'%')

  </select>

  <select id="selectByState" resultMap="BaseResultMap"  parameterType="java.lang.Integer">
    select * from orders
    where  state = #{state,jdbcType=INTEGER}
  </select>


  <resultMap id="OrderUserResultMap" type="com.springboot.springbootshop.model.OrderUser" autoMapping="true">
    <id column="oid" property="oid" />
    <!--association:完成子对象的映射-->
    <!--property:子对象在父对象中的属性名-->
    <!--javaType:子对象的java类型-->
    <!--autoMapping:完成子对象的自动映射，若开启驼峰，则按驼峰匹配-->
    <association property="user"  javaType="com.springboot.springbootshop.model.User" autoMapping="true">
      <id column="uid" property="uid" />
    </association>
  </resultMap>


  <select id="selectOrderAndUserByOid"  parameterType="java.lang.Integer"  resultMap="OrderUserResultMap" >

    select  * from  orders o left join `user`  u on o.uid = u.uid where o.oid = #{oid}
  </select>


</mapper>