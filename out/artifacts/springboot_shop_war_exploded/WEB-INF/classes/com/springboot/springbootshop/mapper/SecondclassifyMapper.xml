<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.springbootshop.mapper.SecondclassifyMapper">
  <resultMap id="BaseResultMap" type="com.springboot.springbootshop.model.Secondclassify">
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="resumes" jdbcType="VARCHAR" property="resumes" />
    <result column="states" jdbcType="INTEGER" property="states" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
  </resultMap>
  <sql id="Base_Column_List">
    sid, sname, keyword, resumes, states, fid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from secondclassify
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from secondclassify
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.springbootshop.model.Secondclassify">
    insert into secondclassify (sid, sname, keyword, 
      resumes, states, fid
      )
    values (#{sid,jdbcType=INTEGER}, #{sname,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR}, 
      #{resumes,jdbcType=VARCHAR}, #{states,jdbcType=INTEGER}, #{fid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.springbootshop.model.Secondclassify">
    insert into secondclassify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="resumes != null">
        resumes,
      </if>
      <if test="states != null">
        states,
      </if>
      <if test="fid != null">
        fid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="resumes != null">
        #{resumes,jdbcType=VARCHAR},
      </if>
      <if test="states != null">
        #{states,jdbcType=INTEGER},
      </if>
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.springbootshop.model.Secondclassify">
    update secondclassify
    <set>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="resumes != null">
        resumes = #{resumes,jdbcType=VARCHAR},
      </if>
      <if test="states != null">
        states = #{states,jdbcType=INTEGER},
      </if>
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.springbootshop.model.Secondclassify">
    update secondclassify
    set sname = #{sname,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      resumes = #{resumes,jdbcType=VARCHAR},
      states = #{states,jdbcType=INTEGER},
      fid = #{fid,jdbcType=INTEGER}
    where sid = #{sid,jdbcType=INTEGER}
  </update>
</mapper>